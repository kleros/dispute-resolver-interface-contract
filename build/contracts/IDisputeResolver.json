{
  "contractName": "IDisputeResolver",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_localDisputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Contribution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IArbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_evidenceGroupID",
          "type": "uint256"
        }
      ],
      "name": "Dispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IArbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_evidenceGroupID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_party",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "Evidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "MetaEvidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IArbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "Ruling",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_localDisputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "RulingFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_localDisputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_reward",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_externalDisputeID",
          "type": "uint256"
        }
      ],
      "name": "externalIDtoLocalID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_localDisputeID",
          "type": "uint256"
        }
      ],
      "name": "numberOfRulingOptions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_localDisputeID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_evidenceURI",
          "type": "string"
        }
      ],
      "name": "submitEvidence",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_localDisputeID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "fundAppeal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fullyFunded",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMultipliers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winnerStakeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loserStakeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loserAppealPeriodMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_localDisputeID",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_contributor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "withdrawFeesAndRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sum",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_localDisputeID",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_contributor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "withdrawFeesAndRewardsForAllRounds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_localDisputeID",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_contributor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "getTotalWithdrawableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sum",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"}],\"name\":\"Dispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_party\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"Evidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"MetaEvidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"Ruling\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"RulingFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_externalDisputeID\",\"type\":\"uint256\"}],\"name\":\"externalIDtoLocalID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"fundAppeal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fullyFunded\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMultipliers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winnerStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loserStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loserAppealPeriodMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"getTotalWithdrawableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"}],\"name\":\"numberOfRulingOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_evidenceURI\",\"type\":\"string\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"withdrawFeesAndRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"withdrawFeesAndRewardsForAllRounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Contribution(uint256,uint256,uint256,address,uint256)\":{\"details\":\"Raised when a contribution is made, inside fundAppeal function.\",\"params\":{\"_amount\":\"Contribution amount.\",\"_contributor\":\"Caller of fundAppeal function.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_round\":\"The round number the contribution was made to.\",\"ruling\":\"Indicates the ruling option which got the contribution.\"}},\"RulingFunded(uint256,uint256,uint256)\":{\"details\":\"To be raised when a ruling option is fully funded for appeal.\",\"params\":{\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_round\":\"Number of the round this ruling option was fully funded in.\",\"_ruling\":\"The ruling option which just got fully funded.\"}},\"Withdrawal(uint256,uint256,uint256,address,uint256)\":{\"details\":\"Raised when a contributor withdraws non-zero value.\",\"params\":{\"_contributor\":\"The beneficiary of withdrawal.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_reward\":\"Total amount of withdrawal, consists of reimbursed deposits plus rewards.\",\"_round\":\"The round number the withdrawal was made from.\",\"_ruling\":\"Indicates the ruling option which contributor gets rewards from.\"}}},\"kind\":\"dev\",\"methods\":{\"externalIDtoLocalID(uint256)\":{\"details\":\"Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\",\"params\":{\"_externalDisputeID\":\"Dispute id as in arbitrator contract.\"},\"returns\":{\"localDisputeID\":\"Dispute id as in arbitrable contract.\"}},\"fundAppeal(uint256,uint256)\":{\"details\":\"Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\",\"params\":{\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_ruling\":\"The ruling option to which the caller wants to contribute.\"},\"returns\":{\"fullyFunded\":\"True if the ruling option got fully funded as a result of this contribution.\"}},\"getMultipliers()\":{\"details\":\"Returns appeal multipliers.\",\"returns\":{\"denominator\":\"Multiplier denominator in basis points.\",\"loserAppealPeriodMultiplier\":\"Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\",\"loserStakeMultiplier\":\"Losers stake multiplier.\",\"winnerStakeMultiplier\":\"Winners stake multiplier.\"}},\"getTotalWithdrawableAmount(uint256,address,uint256)\":{\"details\":\"Returns the sum of withdrawable amount.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_ruling\":\"Ruling option that caller wants to get withdrawable amount from.\"},\"returns\":{\"sum\":\"The total amount available to withdraw.\"}},\"numberOfRulingOptions(uint256)\":{\"details\":\"Returns number of possible ruling options. Valid rulings are [0, return value].\",\"params\":{\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\"},\"returns\":{\"count\":\"The number of ruling options.\"}},\"rule(uint256,uint256)\":{\"details\":\"Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\",\"params\":{\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\"}},\"submitEvidence(uint256,string)\":{\"details\":\"Allows to submit evidence for a given dispute.\",\"params\":{\"_evidenceURI\":\"IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\"}},\"withdrawFeesAndRewards(uint256,address,uint256,uint256)\":{\"details\":\"Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_round\":\"Number of the round that caller wants to execute withdraw on.\",\"_ruling\":\"A ruling option that caller wants to execute withdraw on.\"},\"returns\":{\"sum\":\"The amount that is going to be transferred to contributor as a result of this function call.\"}},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint256)\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\",\"params\":{\"_contributor\":\"Beneficiary of withdraw operation.\",\"_localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"_ruling\":\"Ruling option that caller wants to execute withdraw on.\"}}},\"title\":\"This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet. This interface is used in Dispute Resolver (resolve.kleros.io).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/IDisputeResolver.sol\":\"IDisputeResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"keccak256\":\"0xf1a2c2d7ec1237ef8d3c5f580ac73f56ed58fe4d023817a188363885b3eeb9f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8faa0d171b24d026dd05f6fe3717b87bc314dad8a41474f933187778c9ea1c3d\",\"dweb:/ipfs/QmPJrxmJfjbHRRfFGwNZ1qCv1y6L35TJWSx6g6s7DSGLv4\"]},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"keccak256\":\"0xfd19582446ef635cfb02a035a18efae3bc242ccf1472bb9949cad3d291306333\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4708b3ee9dd8bfab36078c1b07b66e8feb5bf64712d910e4e579007bbb3c7a4b\",\"dweb:/ipfs/QmNqp9nsSoYmi3bttqfnypsnUyigKAca9T4qfZMF7sErS7\"]},\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\":{\"keccak256\":\"0xf9f105a2cbf5e34cdc5ce71d877cded1b502437f1cd6d28173898f88542418af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd75da80f88633affd8f2d93c72dce6538ec872aac0184e57688a553acf01153\",\"dweb:/ipfs/Qmd2VzG1sf43ZxwRXHC7JvvhC8367x347e58GLw1gCihq8\"]},\"project:/contracts/IDisputeResolver.sol\":{\"keccak256\":\"0x9174a37ba69e682381a3ae6e14582a17d69f29be879ff27433fce2b971f871ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a57a273fb53e96b35286f70097a2f71dce35460b082ecc7ad5017f04e63b259\",\"dweb:/ipfs/QmPYML5cPt8opXEwDURJGHXqT7qJPUwNzbNmjZ34RgfA6t\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\n/**\n *  @authors: [@ferittuncer]\n *  @reviewers: [@mtsalenc*, @hbarcelos*, @unknownunknown1, @MerlinEgalite, @fnanni-0*, @shalzz]\n *  @auditors: []\n *  @bounties: []\n *  @deployments: []\n */\n\npragma solidity ^0.8.0;\n\nimport \"@kleros/erc-792/contracts/IArbitrable.sol\";\nimport \"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\";\nimport \"@kleros/erc-792/contracts/IArbitrator.sol\";\n\n/**\n *  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet.\n    This interface is used in Dispute Resolver (resolve.kleros.io).\n */\nabstract contract IDisputeResolver is IArbitrable, IEvidence {\n    string public constant VERSION = \"2.0.0\"; // Can be used to distinguish between multiple deployed versions, if necessary.\n\n    /** @dev Raised when a contribution is made, inside fundAppeal function.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _round The round number the contribution was made to.\n     *  @param ruling Indicates the ruling option which got the contribution.\n     *  @param _contributor Caller of fundAppeal function.\n     *  @param _amount Contribution amount.\n     */\n    event Contribution(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 ruling, address indexed _contributor, uint256 _amount);\n\n    /** @dev Raised when a contributor withdraws non-zero value.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _round The round number the withdrawal was made from.\n     *  @param _ruling Indicates the ruling option which contributor gets rewards from.\n     *  @param _contributor The beneficiary of withdrawal.\n     *  @param _reward Total amount of withdrawal, consists of reimbursed deposits plus rewards.\n     */\n    event Withdrawal(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 _ruling, address indexed _contributor, uint256 _reward);\n\n    /** @dev To be raised when a ruling option is fully funded for appeal.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _round Number of the round this ruling option was fully funded in.\n     *  @param _ruling The ruling option which just got fully funded.\n     */\n    event RulingFunded(uint256 indexed _localDisputeID, uint256 indexed _round, uint256 indexed _ruling);\n\n    /** @dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\n     *  @param _externalDisputeID Dispute id as in arbitrator contract.\n     *  @return localDisputeID Dispute id as in arbitrable contract.\n     */\n    function externalIDtoLocalID(uint256 _externalDisputeID) external virtual returns (uint256 localDisputeID);\n\n    /** @dev Returns number of possible ruling options. Valid rulings are [0, return value].\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @return count The number of ruling options.\n     */\n    function numberOfRulingOptions(uint256 _localDisputeID) external view virtual returns (uint256 count);\n\n    /** @dev Allows to submit evidence for a given dispute.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'\n     */\n    function submitEvidence(uint256 _localDisputeID, string calldata _evidenceURI) external virtual;\n\n    /** @dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _ruling The ruling option to which the caller wants to contribute.\n     *  @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\n     */\n    function fundAppeal(uint256 _localDisputeID, uint256 _ruling) external payable virtual returns (bool fullyFunded);\n\n    /** @dev Returns appeal multipliers.\n     *  @return winnerStakeMultiplier Winners stake multiplier.\n     *  @return loserStakeMultiplier Losers stake multiplier.\n     *  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n     *  @return denominator Multiplier denominator in basis points.\n     */\n    function getMultipliers()\n        external\n        view\n        virtual\n        returns (\n            uint256 winnerStakeMultiplier,\n            uint256 loserStakeMultiplier,\n            uint256 loserAppealPeriodMultiplier,\n            uint256 denominator\n        );\n\n    /** @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _contributor Beneficiary of withdraw operation.\n     *  @param _round Number of the round that caller wants to execute withdraw on.\n     *  @param _ruling A ruling option that caller wants to execute withdraw on.\n     *  @return sum The amount that is going to be transferred to contributor as a result of this function call.\n     */\n    function withdrawFeesAndRewards(\n        uint256 _localDisputeID,\n        address payable _contributor,\n        uint256 _round,\n        uint256 _ruling\n    ) external virtual returns (uint256 sum);\n\n    /** @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _contributor Beneficiary of withdraw operation.\n     *  @param _ruling Ruling option that caller wants to execute withdraw on.\n     */\n    function withdrawFeesAndRewardsForAllRounds(\n        uint256 _localDisputeID,\n        address payable _contributor,\n        uint256 _ruling\n    ) external virtual;\n\n    /** @dev Returns the sum of withdrawable amount.\n     *  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param _contributor Beneficiary of withdraw operation.\n     *  @param _ruling Ruling option that caller wants to get withdrawable amount from.\n     *  @return sum The total amount available to withdraw.\n     */\n    function getTotalWithdrawableAmount(\n        uint256 _localDisputeID,\n        address payable _contributor,\n        uint256 _ruling\n    ) external view virtual returns (uint256 sum);\n}\n",
  "sourcePath": "/home/f/repos/dispute-resolver-interface-contract/contracts/IDisputeResolver.sol",
  "ast": {
    "absolutePath": "project:/contracts/IDisputeResolver.sol",
    "exportedSymbols": {
      "IArbitrable": [
        22
      ],
      "IArbitrator": [
        118
      ],
      "IDisputeResolver": [
        285
      ],
      "IEvidence": [
        154
      ]
    },
    "id": 286,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 156,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "225:23:3"
      },
      {
        "absolutePath": "@kleros/erc-792/contracts/IArbitrable.sol",
        "file": "@kleros/erc-792/contracts/IArbitrable.sol",
        "id": 157,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 286,
        "sourceUnit": 23,
        "src": "250:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@kleros/erc-792/contracts/erc-1497/IEvidence.sol",
        "file": "@kleros/erc-792/contracts/erc-1497/IEvidence.sol",
        "id": 158,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 286,
        "sourceUnit": 155,
        "src": "302:58:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@kleros/erc-792/contracts/IArbitrator.sol",
        "file": "@kleros/erc-792/contracts/IArbitrator.sol",
        "id": 159,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 286,
        "sourceUnit": 119,
        "src": "361:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 161,
              "name": "IArbitrable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22,
              "src": "700:11:3"
            },
            "id": 162,
            "nodeType": "InheritanceSpecifier",
            "src": "700:11:3"
          },
          {
            "baseName": {
              "id": 163,
              "name": "IEvidence",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154,
              "src": "713:9:3"
            },
            "id": 164,
            "nodeType": "InheritanceSpecifier",
            "src": "713:9:3"
          }
        ],
        "canonicalName": "IDisputeResolver",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 160,
          "nodeType": "StructuredDocumentation",
          "src": "414:247:3",
          "text": "  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet.\nThis interface is used in Dispute Resolver (resolve.kleros.io)."
        },
        "fullyImplemented": false,
        "id": 285,
        "linearizedBaseContracts": [
          285,
          154,
          22
        ],
        "name": "IDisputeResolver",
        "nameLocation": "680:16:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "ffa1ad74",
            "id": 167,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "752:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 285,
            "src": "729:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 165,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "729:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "322e302e30",
              "id": 166,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "762:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b4bcb154e38601c389396fa918314da42d4626f13ef6d0ceb07e5f5d26b2fbc3",
                "typeString": "literal_string \"2.0.0\""
              },
              "value": "2.0.0"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 168,
              "nodeType": "StructuredDocumentation",
              "src": "856:489:3",
              "text": "@dev Raised when a contribution is made, inside fundAppeal function.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round The round number the contribution was made to.\n  @param ruling Indicates the ruling option which got the contribution.\n  @param _contributor Caller of fundAppeal function.\n  @param _amount Contribution amount."
            },
            "id": 180,
            "name": "Contribution",
            "nameLocation": "1356:12:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "1385:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1369:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1418:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1402:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nameLocation": "1434:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1426:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_contributor",
                  "nameLocation": "1458:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1442:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1480:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1472:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1368:120:3"
            },
            "src": "1350:139:3"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 181,
              "nodeType": "StructuredDocumentation",
              "src": "1495:540:3",
              "text": "@dev Raised when a contributor withdraws non-zero value.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round The round number the withdrawal was made from.\n  @param _ruling Indicates the ruling option which contributor gets rewards from.\n  @param _contributor The beneficiary of withdrawal.\n  @param _reward Total amount of withdrawal, consists of reimbursed deposits plus rewards."
            },
            "id": 193,
            "name": "Withdrawal",
            "nameLocation": "2046:10:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "2073:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2057:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2057:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2106:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2090:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "2122:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2114:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2114:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_contributor",
                  "nameLocation": "2147:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2131:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2131:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_reward",
                  "nameLocation": "2169:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2161:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2161:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2056:121:3"
            },
            "src": "2040:138:3"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "2184:389:3",
              "text": "@dev To be raised when a ruling option is fully funded for appeal.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round Number of the round this ruling option was fully funded in.\n  @param _ruling The ruling option which just got fully funded."
            },
            "id": 202,
            "name": "RulingFunded",
            "nameLocation": "2584:12:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "2613:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2597:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2597:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2646:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2630:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2630:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "2670:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2654:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2596:82:3"
            },
            "src": "2578:101:3"
          },
          {
            "documentation": {
              "id": 203,
              "nodeType": "StructuredDocumentation",
              "src": "2685:234:3",
              "text": "@dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\n  @param _externalDisputeID Dispute id as in arbitrator contract.\n  @return localDisputeID Dispute id as in arbitrable contract."
            },
            "functionSelector": "c21ae061",
            "id": 210,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "externalIDtoLocalID",
            "nameLocation": "2933:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "_externalDisputeID",
                  "nameLocation": "2961:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2953:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2953:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2952:28:3"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nameLocation": "3015:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "3007:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3006:24:3"
            },
            "scope": 285,
            "src": "2924:107:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 211,
              "nodeType": "StructuredDocumentation",
              "src": "3037:307:3",
              "text": "@dev Returns number of possible ruling options. Valid rulings are [0, return value].\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @return count The number of ruling options."
            },
            "functionSelector": "8d8b2d7e",
            "id": 218,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfRulingOptions",
            "nameLocation": "3358:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "3388:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "3380:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3380:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3379:25:3"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "count",
                  "nameLocation": "3444:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "3436:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3436:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3435:15:3"
            },
            "scope": 285,
            "src": "3349:102:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 219,
              "nodeType": "StructuredDocumentation",
              "src": "3457:351:3",
              "text": "@dev Allows to submit evidence for a given dispute.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"
            },
            "functionSelector": "a6a7f0eb",
            "id": 226,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "submitEvidence",
            "nameLocation": "3822:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "3845:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "3837:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3837:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "_evidenceURI",
                  "nameLocation": "3878:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "3862:28:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3862:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3836:55:3"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3908:0:3"
            },
            "scope": 285,
            "src": "3813:96:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 227,
              "nodeType": "StructuredDocumentation",
              "src": "3915:502:3",
              "text": "@dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _ruling The ruling option to which the caller wants to contribute.\n  @return fullyFunded True if the ruling option got fully funded as a result of this contribution."
            },
            "functionSelector": "4b2f0ea0",
            "id": 236,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fundAppeal",
            "nameLocation": "4431:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "4450:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "4442:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4442:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "4475:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "4467:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4441:42:3"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "fullyFunded",
                  "nameLocation": "4523:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "4518:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4518:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4517:18:3"
            },
            "scope": 285,
            "src": "4422:114:3",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 237,
              "nodeType": "StructuredDocumentation",
              "src": "4542:417:3",
              "text": "@dev Returns appeal multipliers.\n  @return winnerStakeMultiplier Winners stake multiplier.\n  @return loserStakeMultiplier Losers stake multiplier.\n  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n  @return denominator Multiplier denominator in basis points."
            },
            "functionSelector": "79873f8a",
            "id": 248,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMultipliers",
            "nameLocation": "4973:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4987:2:3"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "winnerStakeMultiplier",
                  "nameLocation": "5074:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5066:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5066:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "loserStakeMultiplier",
                  "nameLocation": "5117:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5109:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5109:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "loserAppealPeriodMultiplier",
                  "nameLocation": "5159:27:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5151:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5151:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "denominator",
                  "nameLocation": "5208:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5200:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5200:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5052:177:3"
            },
            "scope": 285,
            "src": "4964:266:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 249,
              "nodeType": "StructuredDocumentation",
              "src": "5236:601:3",
              "text": "@dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _round Number of the round that caller wants to execute withdraw on.\n  @param _ruling A ruling option that caller wants to execute withdraw on.\n  @return sum The amount that is going to be transferred to contributor as a result of this function call."
            },
            "functionSelector": "362c3479",
            "id": 262,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFeesAndRewards",
            "nameLocation": "5851:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "5891:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5883:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5883:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "_contributor",
                  "nameLocation": "5932:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5916:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5916:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "5962:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5954:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5954:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "5986:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5978:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5978:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5873:126:3"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "sum",
                  "nameLocation": "6034:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "6026:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6026:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6025:13:3"
            },
            "scope": 285,
            "src": "5842:197:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 263,
              "nodeType": "StructuredDocumentation",
              "src": "6045:425:3",
              "text": "@dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _ruling Ruling option that caller wants to execute withdraw on."
            },
            "functionSelector": "fe2dddeb",
            "id": 272,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFeesAndRewardsForAllRounds",
            "nameLocation": "6484:34:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "6536:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "6528:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "_contributor",
                  "nameLocation": "6577:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "6561:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6561:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "6607:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "6599:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6599:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6518:102:3"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6637:0:3"
            },
            "scope": 285,
            "src": "6475:163:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 273,
              "nodeType": "StructuredDocumentation",
              "src": "6644:426:3",
              "text": "@dev Returns the sum of withdrawable amount.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _ruling Ruling option that caller wants to get withdrawable amount from.\n  @return sum The total amount available to withdraw."
            },
            "functionSelector": "ec85635b",
            "id": 284,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalWithdrawableAmount",
            "nameLocation": "7084:26:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "7128:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "7120:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7120:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_contributor",
                  "nameLocation": "7169:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "7153:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7153:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "7199:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "7191:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7191:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7110:102:3"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "sum",
                  "nameLocation": "7252:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "7244:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7244:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7243:13:3"
            },
            "scope": 285,
            "src": "7075:182:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 286,
        "src": "662:6597:3",
        "usedErrors": []
      }
    ],
    "src": "225:7035:3"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/IDisputeResolver.sol",
    "exportedSymbols": {
      "IArbitrable": [
        22
      ],
      "IArbitrator": [
        118
      ],
      "IDisputeResolver": [
        285
      ],
      "IEvidence": [
        154
      ]
    },
    "id": 286,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 156,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "225:23:3"
      },
      {
        "absolutePath": "@kleros/erc-792/contracts/IArbitrable.sol",
        "file": "@kleros/erc-792/contracts/IArbitrable.sol",
        "id": 157,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 286,
        "sourceUnit": 23,
        "src": "250:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@kleros/erc-792/contracts/erc-1497/IEvidence.sol",
        "file": "@kleros/erc-792/contracts/erc-1497/IEvidence.sol",
        "id": 158,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 286,
        "sourceUnit": 155,
        "src": "302:58:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@kleros/erc-792/contracts/IArbitrator.sol",
        "file": "@kleros/erc-792/contracts/IArbitrator.sol",
        "id": 159,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 286,
        "sourceUnit": 119,
        "src": "361:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 161,
              "name": "IArbitrable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22,
              "src": "700:11:3"
            },
            "id": 162,
            "nodeType": "InheritanceSpecifier",
            "src": "700:11:3"
          },
          {
            "baseName": {
              "id": 163,
              "name": "IEvidence",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154,
              "src": "713:9:3"
            },
            "id": 164,
            "nodeType": "InheritanceSpecifier",
            "src": "713:9:3"
          }
        ],
        "canonicalName": "IDisputeResolver",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 160,
          "nodeType": "StructuredDocumentation",
          "src": "414:247:3",
          "text": "  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet.\nThis interface is used in Dispute Resolver (resolve.kleros.io)."
        },
        "fullyImplemented": false,
        "id": 285,
        "linearizedBaseContracts": [
          285,
          154,
          22
        ],
        "name": "IDisputeResolver",
        "nameLocation": "680:16:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "ffa1ad74",
            "id": 167,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "752:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 285,
            "src": "729:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 165,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "729:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "322e302e30",
              "id": 166,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "762:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b4bcb154e38601c389396fa918314da42d4626f13ef6d0ceb07e5f5d26b2fbc3",
                "typeString": "literal_string \"2.0.0\""
              },
              "value": "2.0.0"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 168,
              "nodeType": "StructuredDocumentation",
              "src": "856:489:3",
              "text": "@dev Raised when a contribution is made, inside fundAppeal function.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round The round number the contribution was made to.\n  @param ruling Indicates the ruling option which got the contribution.\n  @param _contributor Caller of fundAppeal function.\n  @param _amount Contribution amount."
            },
            "id": 180,
            "name": "Contribution",
            "nameLocation": "1356:12:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "1385:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1369:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1418:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1402:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nameLocation": "1434:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1426:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_contributor",
                  "nameLocation": "1458:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1442:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1480:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1472:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1368:120:3"
            },
            "src": "1350:139:3"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 181,
              "nodeType": "StructuredDocumentation",
              "src": "1495:540:3",
              "text": "@dev Raised when a contributor withdraws non-zero value.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round The round number the withdrawal was made from.\n  @param _ruling Indicates the ruling option which contributor gets rewards from.\n  @param _contributor The beneficiary of withdrawal.\n  @param _reward Total amount of withdrawal, consists of reimbursed deposits plus rewards."
            },
            "id": 193,
            "name": "Withdrawal",
            "nameLocation": "2046:10:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "2073:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2057:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2057:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2106:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2090:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "2122:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2114:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2114:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_contributor",
                  "nameLocation": "2147:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2131:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2131:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_reward",
                  "nameLocation": "2169:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2161:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2161:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2056:121:3"
            },
            "src": "2040:138:3"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "2184:389:3",
              "text": "@dev To be raised when a ruling option is fully funded for appeal.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _round Number of the round this ruling option was fully funded in.\n  @param _ruling The ruling option which just got fully funded."
            },
            "id": 202,
            "name": "RulingFunded",
            "nameLocation": "2584:12:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "2613:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2597:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2597:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2646:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2630:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2630:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "2670:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2654:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2596:82:3"
            },
            "src": "2578:101:3"
          },
          {
            "documentation": {
              "id": 203,
              "nodeType": "StructuredDocumentation",
              "src": "2685:234:3",
              "text": "@dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\n  @param _externalDisputeID Dispute id as in arbitrator contract.\n  @return localDisputeID Dispute id as in arbitrable contract."
            },
            "functionSelector": "c21ae061",
            "id": 210,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "externalIDtoLocalID",
            "nameLocation": "2933:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "_externalDisputeID",
                  "nameLocation": "2961:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2953:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2953:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2952:28:3"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nameLocation": "3015:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "3007:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3006:24:3"
            },
            "scope": 285,
            "src": "2924:107:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 211,
              "nodeType": "StructuredDocumentation",
              "src": "3037:307:3",
              "text": "@dev Returns number of possible ruling options. Valid rulings are [0, return value].\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @return count The number of ruling options."
            },
            "functionSelector": "8d8b2d7e",
            "id": 218,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfRulingOptions",
            "nameLocation": "3358:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "3388:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "3380:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3380:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3379:25:3"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "count",
                  "nameLocation": "3444:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "3436:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3436:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3435:15:3"
            },
            "scope": 285,
            "src": "3349:102:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 219,
              "nodeType": "StructuredDocumentation",
              "src": "3457:351:3",
              "text": "@dev Allows to submit evidence for a given dispute.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _evidenceURI IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'"
            },
            "functionSelector": "a6a7f0eb",
            "id": 226,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "submitEvidence",
            "nameLocation": "3822:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "3845:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "3837:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3837:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "_evidenceURI",
                  "nameLocation": "3878:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "3862:28:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3862:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3836:55:3"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3908:0:3"
            },
            "scope": 285,
            "src": "3813:96:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 227,
              "nodeType": "StructuredDocumentation",
              "src": "3915:502:3",
              "text": "@dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _ruling The ruling option to which the caller wants to contribute.\n  @return fullyFunded True if the ruling option got fully funded as a result of this contribution."
            },
            "functionSelector": "4b2f0ea0",
            "id": 236,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fundAppeal",
            "nameLocation": "4431:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "4450:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "4442:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4442:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "4475:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "4467:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4441:42:3"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "fullyFunded",
                  "nameLocation": "4523:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "4518:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4518:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4517:18:3"
            },
            "scope": 285,
            "src": "4422:114:3",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 237,
              "nodeType": "StructuredDocumentation",
              "src": "4542:417:3",
              "text": "@dev Returns appeal multipliers.\n  @return winnerStakeMultiplier Winners stake multiplier.\n  @return loserStakeMultiplier Losers stake multiplier.\n  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n  @return denominator Multiplier denominator in basis points."
            },
            "functionSelector": "79873f8a",
            "id": 248,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMultipliers",
            "nameLocation": "4973:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4987:2:3"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "winnerStakeMultiplier",
                  "nameLocation": "5074:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5066:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5066:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "loserStakeMultiplier",
                  "nameLocation": "5117:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5109:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5109:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "loserAppealPeriodMultiplier",
                  "nameLocation": "5159:27:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5151:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5151:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "denominator",
                  "nameLocation": "5208:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5200:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5200:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5052:177:3"
            },
            "scope": 285,
            "src": "4964:266:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 249,
              "nodeType": "StructuredDocumentation",
              "src": "5236:601:3",
              "text": "@dev Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _round Number of the round that caller wants to execute withdraw on.\n  @param _ruling A ruling option that caller wants to execute withdraw on.\n  @return sum The amount that is going to be transferred to contributor as a result of this function call."
            },
            "functionSelector": "362c3479",
            "id": 262,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFeesAndRewards",
            "nameLocation": "5851:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "5891:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5883:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5883:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "_contributor",
                  "nameLocation": "5932:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5916:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5916:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "5962:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5954:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5954:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "5986:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5978:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5978:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5873:126:3"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "sum",
                  "nameLocation": "6034:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "6026:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6026:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6025:13:3"
            },
            "scope": 285,
            "src": "5842:197:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 263,
              "nodeType": "StructuredDocumentation",
              "src": "6045:425:3",
              "text": "@dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _ruling Ruling option that caller wants to execute withdraw on."
            },
            "functionSelector": "fe2dddeb",
            "id": 272,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFeesAndRewardsForAllRounds",
            "nameLocation": "6484:34:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "6536:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "6528:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "_contributor",
                  "nameLocation": "6577:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "6561:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6561:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "6607:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "6599:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6599:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6518:102:3"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6637:0:3"
            },
            "scope": 285,
            "src": "6475:163:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 273,
              "nodeType": "StructuredDocumentation",
              "src": "6644:426:3",
              "text": "@dev Returns the sum of withdrawable amount.\n  @param _localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param _contributor Beneficiary of withdraw operation.\n  @param _ruling Ruling option that caller wants to get withdrawable amount from.\n  @return sum The total amount available to withdraw."
            },
            "functionSelector": "ec85635b",
            "id": 284,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalWithdrawableAmount",
            "nameLocation": "7084:26:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_localDisputeID",
                  "nameLocation": "7128:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "7120:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7120:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_contributor",
                  "nameLocation": "7169:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "7153:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7153:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nameLocation": "7199:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "7191:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7191:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7110:102:3"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "sum",
                  "nameLocation": "7252:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "7244:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7244:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7243:13:3"
            },
            "scope": 285,
            "src": "7075:182:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 286,
        "src": "662:6597:3",
        "usedErrors": []
      }
    ],
    "src": "225:7035:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-18T14:59:39.905Z",
  "devdoc": {
    "events": {
      "Contribution(uint256,uint256,uint256,address,uint256)": {
        "details": "Raised when a contribution is made, inside fundAppeal function.",
        "params": {
          "_amount": "Contribution amount.",
          "_contributor": "Caller of fundAppeal function.",
          "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "_round": "The round number the contribution was made to.",
          "ruling": "Indicates the ruling option which got the contribution."
        }
      },
      "RulingFunded(uint256,uint256,uint256)": {
        "details": "To be raised when a ruling option is fully funded for appeal.",
        "params": {
          "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "_round": "Number of the round this ruling option was fully funded in.",
          "_ruling": "The ruling option which just got fully funded."
        }
      },
      "Withdrawal(uint256,uint256,uint256,address,uint256)": {
        "details": "Raised when a contributor withdraws non-zero value.",
        "params": {
          "_contributor": "The beneficiary of withdrawal.",
          "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "_reward": "Total amount of withdrawal, consists of reimbursed deposits plus rewards.",
          "_round": "The round number the withdrawal was made from.",
          "_ruling": "Indicates the ruling option which contributor gets rewards from."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "externalIDtoLocalID(uint256)": {
        "details": "Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.",
        "params": {
          "_externalDisputeID": "Dispute id as in arbitrator contract."
        },
        "returns": {
          "localDisputeID": "Dispute id as in arbitrable contract."
        }
      },
      "fundAppeal(uint256,uint256)": {
        "details": "Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.",
        "params": {
          "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "_ruling": "The ruling option to which the caller wants to contribute."
        },
        "returns": {
          "fullyFunded": "True if the ruling option got fully funded as a result of this contribution."
        }
      },
      "getMultipliers()": {
        "details": "Returns appeal multipliers.",
        "returns": {
          "denominator": "Multiplier denominator in basis points.",
          "loserAppealPeriodMultiplier": "Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.",
          "loserStakeMultiplier": "Losers stake multiplier.",
          "winnerStakeMultiplier": "Winners stake multiplier."
        }
      },
      "getTotalWithdrawableAmount(uint256,address,uint256)": {
        "details": "Returns the sum of withdrawable amount.",
        "params": {
          "_contributor": "Beneficiary of withdraw operation.",
          "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "_ruling": "Ruling option that caller wants to get withdrawable amount from."
        },
        "returns": {
          "sum": "The total amount available to withdraw."
        }
      },
      "numberOfRulingOptions(uint256)": {
        "details": "Returns number of possible ruling options. Valid rulings are [0, return value].",
        "params": {
          "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID."
        },
        "returns": {
          "count": "The number of ruling options."
        }
      },
      "rule(uint256,uint256)": {
        "details": "Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.",
        "params": {
          "_disputeID": "ID of the dispute in the Arbitrator contract.",
          "_ruling": "Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\"."
        }
      },
      "submitEvidence(uint256,string)": {
        "details": "Allows to submit evidence for a given dispute.",
        "params": {
          "_evidenceURI": "IPFS path to evidence, example: '/ipfs/Qmarwkf7C9RuzDEJNnarT3WZ7kem5bk8DZAzx78acJjMFH/evidence.json'",
          "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID."
        }
      },
      "withdrawFeesAndRewards(uint256,address,uint256,uint256)": {
        "details": "Allows to withdraw any reimbursable fees or rewards after the dispute gets resolved.",
        "params": {
          "_contributor": "Beneficiary of withdraw operation.",
          "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "_round": "Number of the round that caller wants to execute withdraw on.",
          "_ruling": "A ruling option that caller wants to execute withdraw on."
        },
        "returns": {
          "sum": "The amount that is going to be transferred to contributor as a result of this function call."
        }
      },
      "withdrawFeesAndRewardsForAllRounds(uint256,address,uint256)": {
        "details": "Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved for all rounds at once.",
        "params": {
          "_contributor": "Beneficiary of withdraw operation.",
          "_localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "_ruling": "Ruling option that caller wants to execute withdraw on."
        }
      }
    },
    "title": "This serves as a standard interface for crowdfunded appeals and evidence submission, which aren't a part of the arbitration (erc-792 and erc-1497) standard yet. This interface is used in Dispute Resolver (resolve.kleros.io).",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}