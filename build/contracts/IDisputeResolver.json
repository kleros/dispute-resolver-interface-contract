{
  "contractName": "IDisputeResolver",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Contribution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IArbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_evidenceGroupID",
          "type": "uint256"
        }
      ],
      "name": "Dispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IArbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_evidenceGroupID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_party",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "Evidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "MetaEvidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IArbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "Ruling",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        }
      ],
      "name": "RulingFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "externalDisputeID",
          "type": "uint256"
        }
      ],
      "name": "externalIDtoLocalID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        }
      ],
      "name": "numberOfRulingOptions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "evidenceURI",
          "type": "string"
        }
      ],
      "name": "submitEvidence",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        }
      ],
      "name": "fundAppeal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fullyFunded",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMultipliers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winnerStakeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loserStakeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loserAppealPeriodMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "contributor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "roundNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        }
      ],
      "name": "withdrawFeesAndRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sum",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "contributor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "roundNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "contributedTo",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawFeesAndRewardsForMultipleRulings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "contributor",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "contributedTo",
          "type": "uint256[]"
        }
      ],
      "name": "withdrawFeesAndRewardsForAllRounds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "localDisputeID",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "contributor",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "contributedTo",
          "type": "uint256[]"
        }
      ],
      "name": "getTotalWithdrawableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sum",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"}],\"name\":\"Dispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_party\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"Evidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"MetaEvidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"Ruling\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"name\":\"RulingFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"externalDisputeID\",\"type\":\"uint256\"}],\"name\":\"externalIDtoLocalID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"name\":\"fundAppeal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fullyFunded\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMultipliers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winnerStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loserStakeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loserAppealPeriodMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"contributor\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"contributedTo\",\"type\":\"uint256[]\"}],\"name\":\"getTotalWithdrawableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"}],\"name\":\"numberOfRulingOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"evidenceURI\",\"type\":\"string\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roundNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"name\":\"withdrawFeesAndRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"contributor\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"contributedTo\",\"type\":\"uint256[]\"}],\"name\":\"withdrawFeesAndRewardsForAllRounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"localDisputeID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roundNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"contributedTo\",\"type\":\"uint256[]\"}],\"name\":\"withdrawFeesAndRewardsForMultipleRulings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Contribution(uint256,uint256,uint256,address,uint256)\":{\"details\":\"Raised when a contribution is made, inside fundAppeal function.\",\"params\":{\"amount\":\"Contribution amount.\",\"contributor\":\"Caller of fundAppeal function.\",\"localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"round\":\"The round number the contribution was made to.\",\"ruling\":\"Indicates the ruling option which got the contribution.\"}},\"RulingFunded(uint256,uint256,uint256)\":{\"details\":\"To be raised when a ruling option is fully funded for appeal.\",\"params\":{\"localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"round\":\"Number of the round this ruling option was fully funded in.\",\"ruling\":\"The ruling option which just got fully funded.\"}},\"Withdrawal(uint256,uint256,uint256,address,uint256)\":{\"details\":\"Raised when a contributor withdraws non-zero value.\",\"params\":{\"contributor\":\"The beneficiary of withdrawal.\",\"localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"reward\":\"Total amount of withdrawal, consists of reimbursed deposits plus rewards.\",\"round\":\"The round number the withdrawal was made from.\",\"ruling\":\"Indicates the ruling option which contributor gets rewards from.\"}}},\"kind\":\"dev\",\"methods\":{\"externalIDtoLocalID(uint256)\":{\"details\":\"Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\",\"params\":{\"externalDisputeID\":\"Dispute id as in arbitrator contract.\"},\"returns\":{\"localDisputeID\":\"Dispute id as in arbitrable contract.\"}},\"fundAppeal(uint256,uint256)\":{\"details\":\"Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\",\"params\":{\"localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"ruling\":\"The ruling option to which the caller wants to contribute.\"},\"returns\":{\"fullyFunded\":\"True if the ruling option got fully funded as a result of this contribution.\"}},\"getMultipliers()\":{\"details\":\"Returns appeal multipliers.\",\"returns\":{\"denominator\":\"Multiplier denominator in basis points.\",\"loserAppealPeriodMultiplier\":\"Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\",\"loserStakeMultiplier\":\"Losers stake multiplier.\",\"winnerStakeMultiplier\":\"Winners stake multiplier.\"}},\"getTotalWithdrawableAmount(uint256,address,uint256[])\":{\"details\":\"Returns the sum of withdrawable amount.\",\"params\":{\"contributedTo\":\"Ruling options that caller wants to execute withdraw on.\",\"contributor\":\"Beneficiary of withdraw operation.\",\"localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\"},\"returns\":{\"sum\":\"The total amount available to withdraw.\"}},\"numberOfRulingOptions(uint256)\":{\"details\":\"Returns number of possible ruling options. Valid rulings are [0, return value].\",\"params\":{\"localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\"},\"returns\":{\"count\":\"The number of ruling options.\"}},\"rule(uint256,uint256)\":{\"details\":\"Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\",\"params\":{\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\"}},\"submitEvidence(uint256,string)\":{\"details\":\"Allows to submit evidence for a given dispute.\",\"params\":{\"evidenceURI\":\"IPFS path to evidence, example: '/ipfs/QmYua74eToq6mUpNSEeZUREFZtcWYCrKP6MBepz8C9hTVy/wtf.txt'\",\"localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\"}},\"withdrawFeesAndRewards(uint256,address,uint256,uint256)\":{\"details\":\"Allows to withdraw any reimbursable fees or rewards after the dispute gets solved.\",\"params\":{\"contributor\":\"Beneficiary of withdraw operation.\",\"localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"roundNumber\":\"Number of the round that caller wants to execute withdraw on.\",\"ruling\":\"A ruling option that caller wants to execute withdraw on.\"},\"returns\":{\"sum\":\"The amount that is going to be transfferred to contributor as a result of this function call, if it's not zero.\"}},\"withdrawFeesAndRewardsForAllRounds(uint256,address,uint256[])\":{\"details\":\"Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved. For multiple rulings options and for all rounds at once.\",\"params\":{\"contributedTo\":\"Ruling options that caller wants to execute withdraw on.\",\"contributor\":\"Beneficiary of withdraw operation.\",\"localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\"}},\"withdrawFeesAndRewardsForMultipleRulings(uint256,address,uint256,uint256[])\":{\"details\":\"Allows to withdraw any reimbursable fees or rewards after the dispute gets solved. For multiple ruling options at once.\",\"params\":{\"contributedTo\":\"Ruling options that caller wants to execute withdraw on.\",\"contributor\":\"Beneficiary of withdraw operation.\",\"localDisputeID\":\"Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\",\"roundNumber\":\"Number of the round that caller wants to execute withdraw on.\"}}},\"title\":\"This serves as a standard interface for crowdfunded appeals and evidence submission, which are not already standardized by IArbitrable. This interface is used in Dispute Resolver (resolve.kleros.io).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/f/repos/dispute-resolver-interface-contract/contracts/solc-0.7.x/IDisputeResolver.sol\":\"IDisputeResolver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/f/repos/dispute-resolver-interface-contract/contracts/solc-0.7.x/IDisputeResolver.sol\":{\"keccak256\":\"0xe6dc9aa2b0b8bc77a1ebdab6a4be22eaacee1106a48de49d3879e2a78c7e8102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03cb3d96334805e1cae40ad09d1fbcb830fa457e32985178b1b8eeaa144e4bf8\",\"dweb:/ipfs/QmRUoomJ1xG9oQspuEvxghmSnJBetLWe3GBhKoAVNsnfCw\"]},\"@kleros/erc-792/contracts/IArbitrable.sol\":{\"keccak256\":\"0x1803a3433a78c509b20bd9477a2c60a71b2ce1ee7e17eb0ef0601618a8a72526\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a72a4b4b7048818eb14e698b7b493cb0e44456f91237b1a9a9251669b1de6484\",\"dweb:/ipfs/QmQLXrMT9S5uMe5WHFcf1G1s1GGZGCtNgXcQQGxwukQkXB\"]},\"@kleros/erc-792/contracts/IArbitrator.sol\":{\"keccak256\":\"0x240a4142f9ec379da0333dfc82409b7b058cff9ea118368eb5e8f15447996c1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a3a6d3631ce0ca5ef1266f1dc7cd6adb842c875fb6a45385a5adfad65f48c67\",\"dweb:/ipfs/QmZi9SpTkcVnUvwmwRdDin3KFALskAQCYWYAsh9AFzmi86\"]},\"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\":{\"keccak256\":\"0x1ccedf5213730632540c748486637d7b1977ee73375818bf498a8276ca49dd13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d58a60e8a3cdfe8515aa67a009cc139aab20d10fe0adc6058cc963b26c2e34a4\",\"dweb:/ipfs/QmUJY5dhS4KpXbLYhTBqMi33fNCUjFG19aLzxcDyeeBFkv\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\n/**\n *  @authors: [@ferittuncer]\n *  @reviewers: [@mtsalenc*, @hbarcelos*, @unknownunknown1*, @MerlinEgalite*]\n *  @auditors: []\n *  @bounties: []\n *  @deployments: []\n */\n\npragma solidity ^0.7.0;\n\nimport \"@kleros/erc-792/contracts/IArbitrable.sol\";\nimport \"@kleros/erc-792/contracts/erc-1497/IEvidence.sol\";\nimport \"@kleros/erc-792/contracts/IArbitrator.sol\";\n\n/**\n *  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which are not already standardized by IArbitrable.\n    This interface is used in Dispute Resolver (resolve.kleros.io).\n */\nabstract contract IDisputeResolver is IArbitrable, IEvidence {\n    string public constant VERSION = \"1.0.0\"; // Can be used to distinguish between multiple deployed versions, if necessary.\n\n    /** @dev Raised when a contribution is made, inside fundAppeal function.\n     *  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param round The round number the contribution was made to.\n     *  @param ruling Indicates the ruling option which got the contribution.\n     *  @param contributor Caller of fundAppeal function.\n     *  @param amount Contribution amount.\n     */\n    event Contribution(uint256 indexed localDisputeID, uint256 indexed round, uint256 ruling, address indexed contributor, uint256 amount);\n\n    /** @dev Raised when a contributor withdraws non-zero value.\n     *  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param round The round number the withdrawal was made from.\n     *  @param ruling Indicates the ruling option which contributor gets rewards from.\n     *  @param contributor The beneficiary of withdrawal.\n     *  @param reward Total amount of withdrawal, consists of reimbursed deposits plus rewards.\n     */\n    event Withdrawal(uint256 indexed localDisputeID, uint256 indexed round, uint256 ruling, address indexed contributor, uint256 reward);\n\n    /** @dev To be raised when a ruling option is fully funded for appeal.\n     *  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param round Number of the round this ruling option was fully funded in.\n     *  @param ruling The ruling option which just got fully funded.\n     */\n    event RulingFunded(uint256 indexed localDisputeID, uint256 indexed round, uint256 indexed ruling);\n\n    /** @dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\n     *  @param externalDisputeID Dispute id as in arbitrator contract.\n     *  @return localDisputeID Dispute id as in arbitrable contract.\n     */\n    function externalIDtoLocalID(uint256 externalDisputeID) external virtual returns (uint256 localDisputeID);\n\n    /** @dev Returns number of possible ruling options. Valid rulings are [0, return value].\n     *  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @return count The number of ruling options.\n     */\n    function numberOfRulingOptions(uint256 localDisputeID) external view virtual returns (uint256 count);\n\n    /** @dev Allows to submit evidence for a given dispute.\n     *  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param evidenceURI IPFS path to evidence, example: '/ipfs/QmYua74eToq6mUpNSEeZUREFZtcWYCrKP6MBepz8C9hTVy/wtf.txt'\n     */\n    function submitEvidence(uint256 localDisputeID, string calldata evidenceURI) external virtual;\n\n    /** @dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\n     *  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param ruling The ruling option to which the caller wants to contribute.\n     *  @return fullyFunded True if the ruling option got fully funded as a result of this contribution.\n     */\n    function fundAppeal(uint256 localDisputeID, uint256 ruling) external payable virtual returns (bool fullyFunded);\n\n    /** @dev Returns appeal multipliers.\n     *  @return winnerStakeMultiplier Winners stake multiplier.\n     *  @return loserStakeMultiplier Losers stake multiplier.\n     *  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n     *  @return denominator Multiplier denominator in basis points.\n     */\n    function getMultipliers()\n        external\n        view\n        virtual\n        returns (\n            uint256 winnerStakeMultiplier,\n            uint256 loserStakeMultiplier,\n            uint256 loserAppealPeriodMultiplier,\n            uint256 denominator\n        );\n\n    /** @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets solved.\n     *  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param contributor Beneficiary of withdraw operation.\n     *  @param roundNumber Number of the round that caller wants to execute withdraw on.\n     *  @param ruling A ruling option that caller wants to execute withdraw on.\n     *  @return sum The amount that is going to be transfferred to contributor as a result of this function call, if it's not zero.\n     */\n    function withdrawFeesAndRewards(\n        uint256 localDisputeID,\n        address payable contributor,\n        uint256 roundNumber,\n        uint256 ruling\n    ) external virtual returns (uint256 sum);\n\n    /** @dev Allows to withdraw any reimbursable fees or rewards after the dispute gets solved. For multiple ruling options at once.\n     *  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param contributor Beneficiary of withdraw operation.\n     *  @param roundNumber Number of the round that caller wants to execute withdraw on.\n     *  @param contributedTo Ruling options that caller wants to execute withdraw on.\n     */\n    function withdrawFeesAndRewardsForMultipleRulings(\n        uint256 localDisputeID,\n        address payable contributor,\n        uint256 roundNumber,\n        uint256[] memory contributedTo\n    ) external virtual;\n\n    /** @dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved. For multiple rulings options and for all rounds at once.\n     *  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param contributor Beneficiary of withdraw operation.\n     *  @param contributedTo Ruling options that caller wants to execute withdraw on.\n     */\n    function withdrawFeesAndRewardsForAllRounds(\n        uint256 localDisputeID,\n        address payable contributor,\n        uint256[] memory contributedTo\n    ) external virtual;\n\n    /** @dev Returns the sum of withdrawable amount.\n     *  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n     *  @param contributor Beneficiary of withdraw operation.\n     *  @param contributedTo Ruling options that caller wants to execute withdraw on.\n     *  @return sum The total amount available to withdraw.\n     */\n    function getTotalWithdrawableAmount(\n        uint256 localDisputeID,\n        address payable contributor,\n        uint256[] memory contributedTo\n    ) public view virtual returns (uint256 sum);\n}\n",
  "sourcePath": "/home/f/repos/dispute-resolver-interface-contract/contracts/solc-0.7.x/IDisputeResolver.sol",
  "ast": {
    "absolutePath": "/home/f/repos/dispute-resolver-interface-contract/contracts/solc-0.7.x/IDisputeResolver.sol",
    "exportedSymbols": {
      "IArbitrable": [
        167
      ],
      "IArbitrator": [
        259
      ],
      "IDisputeResolver": [
        145
      ],
      "IEvidence": [
        293
      ]
    },
    "id": 146,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "206:23:0"
      },
      {
        "absolutePath": "@kleros/erc-792/contracts/IArbitrable.sol",
        "file": "@kleros/erc-792/contracts/IArbitrable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 146,
        "sourceUnit": 168,
        "src": "231:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@kleros/erc-792/contracts/erc-1497/IEvidence.sol",
        "file": "@kleros/erc-792/contracts/erc-1497/IEvidence.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 146,
        "sourceUnit": 294,
        "src": "283:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@kleros/erc-792/contracts/IArbitrator.sol",
        "file": "@kleros/erc-792/contracts/IArbitrator.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 146,
        "sourceUnit": 260,
        "src": "342:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "IArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 167,
              "src": "656:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IArbitrable_$167",
                "typeString": "contract IArbitrable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "656:11:0"
          },
          {
            "baseName": {
              "id": 8,
              "name": "IEvidence",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 293,
              "src": "669:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEvidence_$293",
                "typeString": "contract IEvidence"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "669:9:0"
          }
        ],
        "contractDependencies": [
          167,
          293
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "395:222:0",
          "text": "  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which are not already standardized by IArbitrable.\nThis interface is used in Dispute Resolver (resolve.kleros.io)."
        },
        "fullyImplemented": false,
        "id": 145,
        "linearizedBaseContracts": [
          145,
          293,
          167
        ],
        "name": "IDisputeResolver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "ffa1ad74",
            "id": 12,
            "mutability": "constant",
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 145,
            "src": "685:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 10,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "685:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "312e302e30",
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "718:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                "typeString": "literal_string \"1.0.0\""
              },
              "value": "1.0.0"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 13,
              "nodeType": "StructuredDocumentation",
              "src": "812:485:0",
              "text": "@dev Raised when a contribution is made, inside fundAppeal function.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param round The round number the contribution was made to.\n  @param ruling Indicates the ruling option which got the contribution.\n  @param contributor Caller of fundAppeal function.\n  @param amount Contribution amount."
            },
            "id": 25,
            "name": "Contribution",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1321:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "round",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1353:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1376:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1392:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1421:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:116:0"
            },
            "src": "1302:135:0"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "1443:535:0",
              "text": "@dev Raised when a contributor withdraws non-zero value.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param round The round number the withdrawal was made from.\n  @param ruling Indicates the ruling option which contributor gets rewards from.\n  @param contributor The beneficiary of withdrawal.\n  @param reward Total amount of withdrawal, consists of reimbursed deposits plus rewards."
            },
            "id": 38,
            "name": "Withdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "2000:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "round",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "2032:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "2055:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "2071:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2071:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "2100:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1999:116:0"
            },
            "src": "1983:133:0"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 39,
              "nodeType": "StructuredDocumentation",
              "src": "2122:386:0",
              "text": "@dev To be raised when a ruling option is fully funded for appeal.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param round Number of the round this ruling option was fully funded in.\n  @param ruling The ruling option which just got fully funded."
            },
            "id": 47,
            "name": "RulingFunded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "2532:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2532:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "round",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "2564:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2564:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "2587:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2587:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2531:79:0"
            },
            "src": "2513:98:0"
          },
          {
            "documentation": {
              "id": 48,
              "nodeType": "StructuredDocumentation",
              "src": "2617:233:0",
              "text": "@dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\n  @param externalDisputeID Dispute id as in arbitrator contract.\n  @return localDisputeID Dispute id as in arbitrable contract."
            },
            "functionSelector": "c21ae061",
            "id": 55,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "externalIDtoLocalID",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "externalDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "2884:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2883:27:0"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "2937:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2937:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2936:24:0"
            },
            "scope": 145,
            "src": "2855:106:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 56,
              "nodeType": "StructuredDocumentation",
              "src": "2967:306:0",
              "text": "@dev Returns number of possible ruling options. Valid rulings are [0, return value].\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @return count The number of ruling options."
            },
            "functionSelector": "8d8b2d7e",
            "id": 63,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfRulingOptions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "3309:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3309:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3308:24:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "count",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "3364:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3364:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3363:15:0"
            },
            "scope": 145,
            "src": "3278:101:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 64,
              "nodeType": "StructuredDocumentation",
              "src": "3385:343:0",
              "text": "@dev Allows to submit evidence for a given dispute.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param evidenceURI IPFS path to evidence, example: '/ipfs/QmYua74eToq6mUpNSEeZUREFZtcWYCrKP6MBepz8C9hTVy/wtf.txt'"
            },
            "functionSelector": "a6a7f0eb",
            "id": 71,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "submitEvidence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "3757:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3757:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "evidenceURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "3781:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3781:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3756:53:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3826:0:0"
            },
            "scope": 145,
            "src": "3733:94:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 72,
              "nodeType": "StructuredDocumentation",
              "src": "3833:500:0",
              "text": "@dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param ruling The ruling option to which the caller wants to contribute.\n  @return fullyFunded True if the ruling option got fully funded as a result of this contribution."
            },
            "functionSelector": "4b2f0ea0",
            "id": 81,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fundAppeal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "4358:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4358:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "4382:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4382:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4357:40:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "fullyFunded",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "4432:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4432:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4431:18:0"
            },
            "scope": 145,
            "src": "4338:112:0",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 82,
              "nodeType": "StructuredDocumentation",
              "src": "4456:417:0",
              "text": "@dev Returns appeal multipliers.\n  @return winnerStakeMultiplier Winners stake multiplier.\n  @return loserStakeMultiplier Losers stake multiplier.\n  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n  @return denominator Multiplier denominator in basis points."
            },
            "functionSelector": "79873f8a",
            "id": 93,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMultipliers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4901:2:0"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "winnerStakeMultiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "4980:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "loserStakeMultiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "5023:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5023:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "loserAppealPeriodMultiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "5065:35:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5065:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "5114:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5114:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4966:177:0"
            },
            "scope": 145,
            "src": "4878:266:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 94,
              "nodeType": "StructuredDocumentation",
              "src": "5150:620:0",
              "text": "@dev Allows to withdraw any reimbursable fees or rewards after the dispute gets solved.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param contributor Beneficiary of withdraw operation.\n  @param roundNumber Number of the round that caller wants to execute withdraw on.\n  @param ruling A ruling option that caller wants to execute withdraw on.\n  @return sum The amount that is going to be transfferred to contributor as a result of this function call, if it's not zero."
            },
            "functionSelector": "362c3479",
            "id": 107,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFeesAndRewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "5816:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5816:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "contributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "5848:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5848:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "roundNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "5885:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5885:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "5914:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5914:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5806:128:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "sum",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "5961:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5961:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5960:13:0"
            },
            "scope": 145,
            "src": "5775:199:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 108,
              "nodeType": "StructuredDocumentation",
              "src": "5980:531:0",
              "text": "@dev Allows to withdraw any reimbursable fees or rewards after the dispute gets solved. For multiple ruling options at once.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param contributor Beneficiary of withdraw operation.\n  @param roundNumber Number of the round that caller wants to execute withdraw on.\n  @param contributedTo Ruling options that caller wants to execute withdraw on."
            },
            "functionSelector": "85632b12",
            "id": 120,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFeesAndRewardsForMultipleRulings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "6575:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6575:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "contributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "6607:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6607:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "roundNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "6644:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6644:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "contributedTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "6673:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6673:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116,
                    "nodeType": "ArrayTypeName",
                    "src": "6673:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6565:144:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6726:0:0"
            },
            "scope": 145,
            "src": "6516:211:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "6733:464:0",
              "text": "@dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved. For multiple rulings options and for all rounds at once.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param contributor Beneficiary of withdraw operation.\n  @param contributedTo Ruling options that caller wants to execute withdraw on."
            },
            "functionSelector": "0e274e4c",
            "id": 131,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFeesAndRewardsForAllRounds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "7255:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7255:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "contributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "7287:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7287:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "contributedTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "7324:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 126,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7324:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 127,
                    "nodeType": "ArrayTypeName",
                    "src": "7324:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7245:115:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7377:0:0"
            },
            "scope": 145,
            "src": "7202:176:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 132,
              "nodeType": "StructuredDocumentation",
              "src": "7384:422:0",
              "text": "@dev Returns the sum of withdrawable amount.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param contributor Beneficiary of withdraw operation.\n  @param contributedTo Ruling options that caller wants to execute withdraw on.\n  @return sum The total amount available to withdraw."
            },
            "functionSelector": "c25516e9",
            "id": 144,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalWithdrawableAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "localDisputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "7856:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7856:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "contributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "7888:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7888:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "contributedTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "7925:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 137,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7925:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 138,
                    "nodeType": "ArrayTypeName",
                    "src": "7925:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7846:115:0"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "sum",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "7991:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7991:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7990:13:0"
            },
            "scope": 145,
            "src": "7811:193:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 146,
        "src": "618:7388:0"
      }
    ],
    "src": "206:7801:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/f/repos/dispute-resolver-interface-contract/contracts/solc-0.7.x/IDisputeResolver.sol",
      "exportedSymbols": {
        "IArbitrable": [
          167
        ],
        "IArbitrator": [
          259
        ],
        "IDisputeResolver": [
          145
        ],
        "IEvidence": [
          293
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "206:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 168,
          "absolutePath": "@kleros/erc-792/contracts/IArbitrable.sol",
          "file": "@kleros/erc-792/contracts/IArbitrable.sol",
          "scope": 146,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "231:51:0"
      },
      {
        "attributes": {
          "SourceUnit": 294,
          "absolutePath": "@kleros/erc-792/contracts/erc-1497/IEvidence.sol",
          "file": "@kleros/erc-792/contracts/erc-1497/IEvidence.sol",
          "scope": 146,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "283:58:0"
      },
      {
        "attributes": {
          "SourceUnit": 260,
          "absolutePath": "@kleros/erc-792/contracts/IArbitrator.sol",
          "file": "@kleros/erc-792/contracts/IArbitrator.sol",
          "scope": 146,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4,
        "name": "ImportDirective",
        "src": "342:51:0"
      },
      {
        "attributes": {
          "abstract": true,
          "contractDependencies": [
            167,
            293
          ],
          "contractKind": "contract",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            145,
            293,
            167
          ],
          "name": "IDisputeResolver",
          "scope": 146
        },
        "children": [
          {
            "attributes": {
              "text": "  @title This serves as a standard interface for crowdfunded appeals and evidence submission, which are not already standardized by IArbitrable.\nThis interface is used in Dispute Resolver (resolve.kleros.io)."
            },
            "id": 5,
            "name": "StructuredDocumentation",
            "src": "395:222:0"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IArbitrable",
                  "referencedDeclaration": 167,
                  "type": "contract IArbitrable"
                },
                "id": 6,
                "name": "UserDefinedTypeName",
                "src": "656:11:0"
              }
            ],
            "id": 7,
            "name": "InheritanceSpecifier",
            "src": "656:11:0"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IEvidence",
                  "referencedDeclaration": 293,
                  "type": "contract IEvidence"
                },
                "id": 8,
                "name": "UserDefinedTypeName",
                "src": "669:9:0"
              }
            ],
            "id": 9,
            "name": "InheritanceSpecifier",
            "src": "669:9:0"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "ffa1ad74",
              "mutability": "constant",
              "name": "VERSION",
              "scope": 145,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 10,
                "name": "ElementaryTypeName",
                "src": "685:6:0"
              },
              {
                "attributes": {
                  "hexvalue": "312e302e30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"1.0.0\"",
                  "value": "1.0.0"
                },
                "id": 11,
                "name": "Literal",
                "src": "718:7:0"
              }
            ],
            "id": 12,
            "name": "VariableDeclaration",
            "src": "685:40:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "Contribution"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Raised when a contribution is made, inside fundAppeal function.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param round The round number the contribution was made to.\n  @param ruling Indicates the ruling option which got the contribution.\n  @param contributor Caller of fundAppeal function.\n  @param amount Contribution amount."
                },
                "id": 13,
                "name": "StructuredDocumentation",
                "src": "812:485:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "localDisputeID",
                      "scope": 25,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 14,
                        "name": "ElementaryTypeName",
                        "src": "1321:7:0"
                      }
                    ],
                    "id": 15,
                    "name": "VariableDeclaration",
                    "src": "1321:30:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "round",
                      "scope": 25,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 16,
                        "name": "ElementaryTypeName",
                        "src": "1353:7:0"
                      }
                    ],
                    "id": 17,
                    "name": "VariableDeclaration",
                    "src": "1353:21:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "ruling",
                      "scope": 25,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 18,
                        "name": "ElementaryTypeName",
                        "src": "1376:7:0"
                      }
                    ],
                    "id": 19,
                    "name": "VariableDeclaration",
                    "src": "1376:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "contributor",
                      "scope": 25,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 20,
                        "name": "ElementaryTypeName",
                        "src": "1392:7:0"
                      }
                    ],
                    "id": 21,
                    "name": "VariableDeclaration",
                    "src": "1392:27:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 25,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 22,
                        "name": "ElementaryTypeName",
                        "src": "1421:7:0"
                      }
                    ],
                    "id": 23,
                    "name": "VariableDeclaration",
                    "src": "1421:14:0"
                  }
                ],
                "id": 24,
                "name": "ParameterList",
                "src": "1320:116:0"
              }
            ],
            "id": 25,
            "name": "EventDefinition",
            "src": "1302:135:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "Withdrawal"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Raised when a contributor withdraws non-zero value.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param round The round number the withdrawal was made from.\n  @param ruling Indicates the ruling option which contributor gets rewards from.\n  @param contributor The beneficiary of withdrawal.\n  @param reward Total amount of withdrawal, consists of reimbursed deposits plus rewards."
                },
                "id": 26,
                "name": "StructuredDocumentation",
                "src": "1443:535:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "localDisputeID",
                      "scope": 38,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27,
                        "name": "ElementaryTypeName",
                        "src": "2000:7:0"
                      }
                    ],
                    "id": 28,
                    "name": "VariableDeclaration",
                    "src": "2000:30:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "round",
                      "scope": 38,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 29,
                        "name": "ElementaryTypeName",
                        "src": "2032:7:0"
                      }
                    ],
                    "id": 30,
                    "name": "VariableDeclaration",
                    "src": "2032:21:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "ruling",
                      "scope": 38,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 31,
                        "name": "ElementaryTypeName",
                        "src": "2055:7:0"
                      }
                    ],
                    "id": 32,
                    "name": "VariableDeclaration",
                    "src": "2055:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "contributor",
                      "scope": 38,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 33,
                        "name": "ElementaryTypeName",
                        "src": "2071:7:0"
                      }
                    ],
                    "id": 34,
                    "name": "VariableDeclaration",
                    "src": "2071:27:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "reward",
                      "scope": 38,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 35,
                        "name": "ElementaryTypeName",
                        "src": "2100:7:0"
                      }
                    ],
                    "id": 36,
                    "name": "VariableDeclaration",
                    "src": "2100:14:0"
                  }
                ],
                "id": 37,
                "name": "ParameterList",
                "src": "1999:116:0"
              }
            ],
            "id": 38,
            "name": "EventDefinition",
            "src": "1983:133:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "RulingFunded"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev To be raised when a ruling option is fully funded for appeal.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param round Number of the round this ruling option was fully funded in.\n  @param ruling The ruling option which just got fully funded."
                },
                "id": 39,
                "name": "StructuredDocumentation",
                "src": "2122:386:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "localDisputeID",
                      "scope": 47,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 40,
                        "name": "ElementaryTypeName",
                        "src": "2532:7:0"
                      }
                    ],
                    "id": 41,
                    "name": "VariableDeclaration",
                    "src": "2532:30:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "round",
                      "scope": 47,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 42,
                        "name": "ElementaryTypeName",
                        "src": "2564:7:0"
                      }
                    ],
                    "id": 43,
                    "name": "VariableDeclaration",
                    "src": "2564:21:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "ruling",
                      "scope": 47,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 44,
                        "name": "ElementaryTypeName",
                        "src": "2587:7:0"
                      }
                    ],
                    "id": 45,
                    "name": "VariableDeclaration",
                    "src": "2587:22:0"
                  }
                ],
                "id": 46,
                "name": "ParameterList",
                "src": "2531:79:0"
              }
            ],
            "id": 47,
            "name": "EventDefinition",
            "src": "2513:98:0"
          },
          {
            "attributes": {
              "functionSelector": "c21ae061",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "externalIDtoLocalID",
              "scope": 145,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.\n  @param externalDisputeID Dispute id as in arbitrator contract.\n  @return localDisputeID Dispute id as in arbitrable contract."
                },
                "id": 48,
                "name": "StructuredDocumentation",
                "src": "2617:233:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "externalDisputeID",
                      "scope": 55,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 49,
                        "name": "ElementaryTypeName",
                        "src": "2884:7:0"
                      }
                    ],
                    "id": 50,
                    "name": "VariableDeclaration",
                    "src": "2884:25:0"
                  }
                ],
                "id": 51,
                "name": "ParameterList",
                "src": "2883:27:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "localDisputeID",
                      "scope": 55,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 52,
                        "name": "ElementaryTypeName",
                        "src": "2937:7:0"
                      }
                    ],
                    "id": 53,
                    "name": "VariableDeclaration",
                    "src": "2937:22:0"
                  }
                ],
                "id": 54,
                "name": "ParameterList",
                "src": "2936:24:0"
              }
            ],
            "id": 55,
            "name": "FunctionDefinition",
            "src": "2855:106:0"
          },
          {
            "attributes": {
              "functionSelector": "8d8b2d7e",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "numberOfRulingOptions",
              "scope": 145,
              "stateMutability": "view",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Returns number of possible ruling options. Valid rulings are [0, return value].\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @return count The number of ruling options."
                },
                "id": 56,
                "name": "StructuredDocumentation",
                "src": "2967:306:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "localDisputeID",
                      "scope": 63,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 57,
                        "name": "ElementaryTypeName",
                        "src": "3309:7:0"
                      }
                    ],
                    "id": 58,
                    "name": "VariableDeclaration",
                    "src": "3309:22:0"
                  }
                ],
                "id": 59,
                "name": "ParameterList",
                "src": "3308:24:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "count",
                      "scope": 63,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 60,
                        "name": "ElementaryTypeName",
                        "src": "3364:7:0"
                      }
                    ],
                    "id": 61,
                    "name": "VariableDeclaration",
                    "src": "3364:13:0"
                  }
                ],
                "id": 62,
                "name": "ParameterList",
                "src": "3363:15:0"
              }
            ],
            "id": 63,
            "name": "FunctionDefinition",
            "src": "3278:101:0"
          },
          {
            "attributes": {
              "functionSelector": "a6a7f0eb",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "submitEvidence",
              "scope": 145,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Allows to submit evidence for a given dispute.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param evidenceURI IPFS path to evidence, example: '/ipfs/QmYua74eToq6mUpNSEeZUREFZtcWYCrKP6MBepz8C9hTVy/wtf.txt'"
                },
                "id": 64,
                "name": "StructuredDocumentation",
                "src": "3385:343:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "localDisputeID",
                      "scope": 71,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 65,
                        "name": "ElementaryTypeName",
                        "src": "3757:7:0"
                      }
                    ],
                    "id": 66,
                    "name": "VariableDeclaration",
                    "src": "3757:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "evidenceURI",
                      "scope": 71,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 67,
                        "name": "ElementaryTypeName",
                        "src": "3781:6:0"
                      }
                    ],
                    "id": 68,
                    "name": "VariableDeclaration",
                    "src": "3781:27:0"
                  }
                ],
                "id": 69,
                "name": "ParameterList",
                "src": "3756:53:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 70,
                "name": "ParameterList",
                "src": "3826:0:0"
              }
            ],
            "id": 71,
            "name": "FunctionDefinition",
            "src": "3733:94:0"
          },
          {
            "attributes": {
              "functionSelector": "4b2f0ea0",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "fundAppeal",
              "scope": 145,
              "stateMutability": "payable",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param ruling The ruling option to which the caller wants to contribute.\n  @return fullyFunded True if the ruling option got fully funded as a result of this contribution."
                },
                "id": 72,
                "name": "StructuredDocumentation",
                "src": "3833:500:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "localDisputeID",
                      "scope": 81,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 73,
                        "name": "ElementaryTypeName",
                        "src": "4358:7:0"
                      }
                    ],
                    "id": 74,
                    "name": "VariableDeclaration",
                    "src": "4358:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "ruling",
                      "scope": 81,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 75,
                        "name": "ElementaryTypeName",
                        "src": "4382:7:0"
                      }
                    ],
                    "id": 76,
                    "name": "VariableDeclaration",
                    "src": "4382:14:0"
                  }
                ],
                "id": 77,
                "name": "ParameterList",
                "src": "4357:40:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "fullyFunded",
                      "scope": 81,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 78,
                        "name": "ElementaryTypeName",
                        "src": "4432:4:0"
                      }
                    ],
                    "id": 79,
                    "name": "VariableDeclaration",
                    "src": "4432:16:0"
                  }
                ],
                "id": 80,
                "name": "ParameterList",
                "src": "4431:18:0"
              }
            ],
            "id": 81,
            "name": "FunctionDefinition",
            "src": "4338:112:0"
          },
          {
            "attributes": {
              "functionSelector": "79873f8a",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getMultipliers",
              "scope": 145,
              "stateMutability": "view",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Returns appeal multipliers.\n  @return winnerStakeMultiplier Winners stake multiplier.\n  @return loserStakeMultiplier Losers stake multiplier.\n  @return loserAppealPeriodMultiplier Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.\n  @return denominator Multiplier denominator in basis points."
                },
                "id": 82,
                "name": "StructuredDocumentation",
                "src": "4456:417:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 83,
                "name": "ParameterList",
                "src": "4901:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "winnerStakeMultiplier",
                      "scope": 93,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 84,
                        "name": "ElementaryTypeName",
                        "src": "4980:7:0"
                      }
                    ],
                    "id": 85,
                    "name": "VariableDeclaration",
                    "src": "4980:29:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "loserStakeMultiplier",
                      "scope": 93,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 86,
                        "name": "ElementaryTypeName",
                        "src": "5023:7:0"
                      }
                    ],
                    "id": 87,
                    "name": "VariableDeclaration",
                    "src": "5023:28:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "loserAppealPeriodMultiplier",
                      "scope": 93,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 88,
                        "name": "ElementaryTypeName",
                        "src": "5065:7:0"
                      }
                    ],
                    "id": 89,
                    "name": "VariableDeclaration",
                    "src": "5065:35:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "denominator",
                      "scope": 93,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 90,
                        "name": "ElementaryTypeName",
                        "src": "5114:7:0"
                      }
                    ],
                    "id": 91,
                    "name": "VariableDeclaration",
                    "src": "5114:19:0"
                  }
                ],
                "id": 92,
                "name": "ParameterList",
                "src": "4966:177:0"
              }
            ],
            "id": 93,
            "name": "FunctionDefinition",
            "src": "4878:266:0"
          },
          {
            "attributes": {
              "functionSelector": "362c3479",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawFeesAndRewards",
              "scope": 145,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Allows to withdraw any reimbursable fees or rewards after the dispute gets solved.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param contributor Beneficiary of withdraw operation.\n  @param roundNumber Number of the round that caller wants to execute withdraw on.\n  @param ruling A ruling option that caller wants to execute withdraw on.\n  @return sum The amount that is going to be transfferred to contributor as a result of this function call, if it's not zero."
                },
                "id": 94,
                "name": "StructuredDocumentation",
                "src": "5150:620:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "localDisputeID",
                      "scope": 107,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 95,
                        "name": "ElementaryTypeName",
                        "src": "5816:7:0"
                      }
                    ],
                    "id": 96,
                    "name": "VariableDeclaration",
                    "src": "5816:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "contributor",
                      "scope": 107,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 97,
                        "name": "ElementaryTypeName",
                        "src": "5848:15:0"
                      }
                    ],
                    "id": 98,
                    "name": "VariableDeclaration",
                    "src": "5848:27:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "roundNumber",
                      "scope": 107,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 99,
                        "name": "ElementaryTypeName",
                        "src": "5885:7:0"
                      }
                    ],
                    "id": 100,
                    "name": "VariableDeclaration",
                    "src": "5885:19:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "ruling",
                      "scope": 107,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 101,
                        "name": "ElementaryTypeName",
                        "src": "5914:7:0"
                      }
                    ],
                    "id": 102,
                    "name": "VariableDeclaration",
                    "src": "5914:14:0"
                  }
                ],
                "id": 103,
                "name": "ParameterList",
                "src": "5806:128:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "sum",
                      "scope": 107,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 104,
                        "name": "ElementaryTypeName",
                        "src": "5961:7:0"
                      }
                    ],
                    "id": 105,
                    "name": "VariableDeclaration",
                    "src": "5961:11:0"
                  }
                ],
                "id": 106,
                "name": "ParameterList",
                "src": "5960:13:0"
              }
            ],
            "id": 107,
            "name": "FunctionDefinition",
            "src": "5775:199:0"
          },
          {
            "attributes": {
              "functionSelector": "85632b12",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawFeesAndRewardsForMultipleRulings",
              "scope": 145,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Allows to withdraw any reimbursable fees or rewards after the dispute gets solved. For multiple ruling options at once.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param contributor Beneficiary of withdraw operation.\n  @param roundNumber Number of the round that caller wants to execute withdraw on.\n  @param contributedTo Ruling options that caller wants to execute withdraw on."
                },
                "id": 108,
                "name": "StructuredDocumentation",
                "src": "5980:531:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "localDisputeID",
                      "scope": 120,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 109,
                        "name": "ElementaryTypeName",
                        "src": "6575:7:0"
                      }
                    ],
                    "id": 110,
                    "name": "VariableDeclaration",
                    "src": "6575:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "contributor",
                      "scope": 120,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 111,
                        "name": "ElementaryTypeName",
                        "src": "6607:15:0"
                      }
                    ],
                    "id": 112,
                    "name": "VariableDeclaration",
                    "src": "6607:27:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "roundNumber",
                      "scope": 120,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 113,
                        "name": "ElementaryTypeName",
                        "src": "6644:7:0"
                      }
                    ],
                    "id": 114,
                    "name": "VariableDeclaration",
                    "src": "6644:19:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "contributedTo",
                      "scope": 120,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 115,
                            "name": "ElementaryTypeName",
                            "src": "6673:7:0"
                          }
                        ],
                        "id": 116,
                        "name": "ArrayTypeName",
                        "src": "6673:9:0"
                      }
                    ],
                    "id": 117,
                    "name": "VariableDeclaration",
                    "src": "6673:30:0"
                  }
                ],
                "id": 118,
                "name": "ParameterList",
                "src": "6565:144:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 119,
                "name": "ParameterList",
                "src": "6726:0:0"
              }
            ],
            "id": 120,
            "name": "FunctionDefinition",
            "src": "6516:211:0"
          },
          {
            "attributes": {
              "functionSelector": "0e274e4c",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawFeesAndRewardsForAllRounds",
              "scope": 145,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved. For multiple rulings options and for all rounds at once.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param contributor Beneficiary of withdraw operation.\n  @param contributedTo Ruling options that caller wants to execute withdraw on."
                },
                "id": 121,
                "name": "StructuredDocumentation",
                "src": "6733:464:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "localDisputeID",
                      "scope": 131,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 122,
                        "name": "ElementaryTypeName",
                        "src": "7255:7:0"
                      }
                    ],
                    "id": 123,
                    "name": "VariableDeclaration",
                    "src": "7255:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "contributor",
                      "scope": 131,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 124,
                        "name": "ElementaryTypeName",
                        "src": "7287:15:0"
                      }
                    ],
                    "id": 125,
                    "name": "VariableDeclaration",
                    "src": "7287:27:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "contributedTo",
                      "scope": 131,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 126,
                            "name": "ElementaryTypeName",
                            "src": "7324:7:0"
                          }
                        ],
                        "id": 127,
                        "name": "ArrayTypeName",
                        "src": "7324:9:0"
                      }
                    ],
                    "id": 128,
                    "name": "VariableDeclaration",
                    "src": "7324:30:0"
                  }
                ],
                "id": 129,
                "name": "ParameterList",
                "src": "7245:115:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 130,
                "name": "ParameterList",
                "src": "7377:0:0"
              }
            ],
            "id": 131,
            "name": "FunctionDefinition",
            "src": "7202:176:0"
          },
          {
            "attributes": {
              "functionSelector": "c25516e9",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTotalWithdrawableAmount",
              "scope": 145,
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Returns the sum of withdrawable amount.\n  @param localDisputeID Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.\n  @param contributor Beneficiary of withdraw operation.\n  @param contributedTo Ruling options that caller wants to execute withdraw on.\n  @return sum The total amount available to withdraw."
                },
                "id": 132,
                "name": "StructuredDocumentation",
                "src": "7384:422:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "localDisputeID",
                      "scope": 144,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 133,
                        "name": "ElementaryTypeName",
                        "src": "7856:7:0"
                      }
                    ],
                    "id": 134,
                    "name": "VariableDeclaration",
                    "src": "7856:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "contributor",
                      "scope": 144,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 135,
                        "name": "ElementaryTypeName",
                        "src": "7888:15:0"
                      }
                    ],
                    "id": 136,
                    "name": "VariableDeclaration",
                    "src": "7888:27:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "contributedTo",
                      "scope": 144,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 137,
                            "name": "ElementaryTypeName",
                            "src": "7925:7:0"
                          }
                        ],
                        "id": 138,
                        "name": "ArrayTypeName",
                        "src": "7925:9:0"
                      }
                    ],
                    "id": 139,
                    "name": "VariableDeclaration",
                    "src": "7925:30:0"
                  }
                ],
                "id": 140,
                "name": "ParameterList",
                "src": "7846:115:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "sum",
                      "scope": 144,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 141,
                        "name": "ElementaryTypeName",
                        "src": "7991:7:0"
                      }
                    ],
                    "id": 142,
                    "name": "VariableDeclaration",
                    "src": "7991:11:0"
                  }
                ],
                "id": 143,
                "name": "ParameterList",
                "src": "7990:13:0"
              }
            ],
            "id": 144,
            "name": "FunctionDefinition",
            "src": "7811:193:0"
          }
        ],
        "id": 145,
        "name": "ContractDefinition",
        "src": "618:7388:0"
      }
    ],
    "id": 146,
    "name": "SourceUnit",
    "src": "206:7801:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-03T17:27:31.413Z",
  "devdoc": {
    "events": {
      "Contribution(uint256,uint256,uint256,address,uint256)": {
        "details": "Raised when a contribution is made, inside fundAppeal function.",
        "params": {
          "amount": "Contribution amount.",
          "contributor": "Caller of fundAppeal function.",
          "localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "round": "The round number the contribution was made to.",
          "ruling": "Indicates the ruling option which got the contribution."
        }
      },
      "RulingFunded(uint256,uint256,uint256)": {
        "details": "To be raised when a ruling option is fully funded for appeal.",
        "params": {
          "localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "round": "Number of the round this ruling option was fully funded in.",
          "ruling": "The ruling option which just got fully funded."
        }
      },
      "Withdrawal(uint256,uint256,uint256,address,uint256)": {
        "details": "Raised when a contributor withdraws non-zero value.",
        "params": {
          "contributor": "The beneficiary of withdrawal.",
          "localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "reward": "Total amount of withdrawal, consists of reimbursed deposits plus rewards.",
          "round": "The round number the withdrawal was made from.",
          "ruling": "Indicates the ruling option which contributor gets rewards from."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "externalIDtoLocalID(uint256)": {
        "details": "Maps external (arbitrator side) dispute id to local (arbitrable) dispute id.",
        "params": {
          "externalDisputeID": "Dispute id as in arbitrator contract."
        },
        "returns": {
          "localDisputeID": "Dispute id as in arbitrable contract."
        }
      },
      "fundAppeal(uint256,uint256)": {
        "details": "Manages contributions and calls appeal function of the specified arbitrator to appeal a dispute. This function lets appeals be crowdfunded.",
        "params": {
          "localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "ruling": "The ruling option to which the caller wants to contribute."
        },
        "returns": {
          "fullyFunded": "True if the ruling option got fully funded as a result of this contribution."
        }
      },
      "getMultipliers()": {
        "details": "Returns appeal multipliers.",
        "returns": {
          "denominator": "Multiplier denominator in basis points.",
          "loserAppealPeriodMultiplier": "Losers appeal period multiplier. The loser is given less time to fund its appeal to defend against last minute appeal funding attacks.",
          "loserStakeMultiplier": "Losers stake multiplier.",
          "winnerStakeMultiplier": "Winners stake multiplier."
        }
      },
      "getTotalWithdrawableAmount(uint256,address,uint256[])": {
        "details": "Returns the sum of withdrawable amount.",
        "params": {
          "contributedTo": "Ruling options that caller wants to execute withdraw on.",
          "contributor": "Beneficiary of withdraw operation.",
          "localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID."
        },
        "returns": {
          "sum": "The total amount available to withdraw."
        }
      },
      "numberOfRulingOptions(uint256)": {
        "details": "Returns number of possible ruling options. Valid rulings are [0, return value].",
        "params": {
          "localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID."
        },
        "returns": {
          "count": "The number of ruling options."
        }
      },
      "rule(uint256,uint256)": {
        "details": "Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.",
        "params": {
          "_disputeID": "ID of the dispute in the Arbitrator contract.",
          "_ruling": "Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\"."
        }
      },
      "submitEvidence(uint256,string)": {
        "details": "Allows to submit evidence for a given dispute.",
        "params": {
          "evidenceURI": "IPFS path to evidence, example: '/ipfs/QmYua74eToq6mUpNSEeZUREFZtcWYCrKP6MBepz8C9hTVy/wtf.txt'",
          "localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID."
        }
      },
      "withdrawFeesAndRewards(uint256,address,uint256,uint256)": {
        "details": "Allows to withdraw any reimbursable fees or rewards after the dispute gets solved.",
        "params": {
          "contributor": "Beneficiary of withdraw operation.",
          "localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "roundNumber": "Number of the round that caller wants to execute withdraw on.",
          "ruling": "A ruling option that caller wants to execute withdraw on."
        },
        "returns": {
          "sum": "The amount that is going to be transfferred to contributor as a result of this function call, if it's not zero."
        }
      },
      "withdrawFeesAndRewardsForAllRounds(uint256,address,uint256[])": {
        "details": "Allows to withdraw any rewards or reimbursable fees after the dispute gets resolved. For multiple rulings options and for all rounds at once.",
        "params": {
          "contributedTo": "Ruling options that caller wants to execute withdraw on.",
          "contributor": "Beneficiary of withdraw operation.",
          "localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID."
        }
      },
      "withdrawFeesAndRewardsForMultipleRulings(uint256,address,uint256,uint256[])": {
        "details": "Allows to withdraw any reimbursable fees or rewards after the dispute gets solved. For multiple ruling options at once.",
        "params": {
          "contributedTo": "Ruling options that caller wants to execute withdraw on.",
          "contributor": "Beneficiary of withdraw operation.",
          "localDisputeID": "Identifier of a dispute in scope of arbitrable contract. Arbitrator ids can be translated to local ids via externalIDtoLocalID.",
          "roundNumber": "Number of the round that caller wants to execute withdraw on."
        }
      }
    },
    "title": "This serves as a standard interface for crowdfunded appeals and evidence submission, which are not already standardized by IArbitrable. This interface is used in Dispute Resolver (resolve.kleros.io).",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}